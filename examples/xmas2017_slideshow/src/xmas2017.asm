// Start with shared definitions...
include "Megaprocessor_defs.asm";

// *****************************************            
// Ensure the SGX libraries start at an address which
// won't conflict with our code.
org 0x4000;
include "sgx/sgx.asm";
include "zxspectrum_font.asm";

// *****************************************            
// Our code...
        org  0;
        
// *****************************************            
// vectors
reset:       jmp    start;
             nop;
ext_int:     reti;
             nop;
             nop;
             nop;        
div_zero:    reti;
             nop;
             nop;
             nop;        
illegal:     reti;
             nop;
             nop;
             nop;


// *****************************************     
textSpectrum35:
        ret;
        ld.w    r2, #INT_RAM_START + 16;
        ld.w    r3, #TXT_MONA;
        jsr     sgx_graphics_Font_draw;

        ld.w    r2, #INT_RAM_START + 48 + 170 - 2;
        ld.w    r3, #TXT_LISA;
        jsr     sgx_graphics_Font_draw;

        ret;

jsw_anim_count  equ $;
        db 0;

transition1:
        jsr     delay10;
        jmp     sgx_fx_scroll_down_2;

transition2:
        jsr     delay10;
        jmp     sgx_fx_scroll_down_2;


start:
        // give ourselves a stack
        ld.w    r0,#0x2000;
        move    sp,r0;
        
        // Initialize the font and other parameters
        jsr     sgx_init;

pic1:

        jsr     sgx_graphics_DrawSurface_clearScreen;



        ld.w r3, #IMG_3DMONSTER; 
        jsr sgx_graphics_DrawSurface_setFillTexture; 
        ld.w r2, #INT_RAM_START + 12; 
        jsr sgx_graphics_DrawSurface_fillPoint; 
        jsr     transition1;


        ld.w r3, #IMG_ACORN; 
        jsr sgx_graphics_DrawSurface_setFillTexture; 
        ld.w r2, #INT_RAM_START + 36; 
        jsr sgx_graphics_DrawSurface_fillPoint; 
        jsr     transition2;

        ld.w r3, #IMG_MARIO; 
        jsr sgx_graphics_DrawSurface_setFillTexture; 
        ld.w r2, #INT_RAM_START + 32; 
        jsr sgx_graphics_DrawSurface_fillPoint; 
        jsr     transition1;

        ld.w r3, #IMG_ATARI; 
        jsr sgx_graphics_DrawSurface_setFillTexture; 
        ld.w r2, #INT_RAM_START + 60; 
        jsr sgx_graphics_DrawSurface_fillPoint; 
        jsr     transition2;


        ld.w r3, #IMG_APPLE; 
        jsr sgx_graphics_DrawSurface_setFillTexture; 
        ld.w r2, #INT_RAM_START + 56; 
        jsr sgx_graphics_DrawSurface_fillPoint; 
        jsr     transition1;


        ld.w r3, #IMG_OWL; 
        jsr sgx_graphics_DrawSurface_setFillTexture; 
        ld.w r2, #INT_RAM_START + 48; 
        jsr sgx_graphics_DrawSurface_fillPoint; 
        jsr     transition2;

        ld.w r3, #IMG_HORACE; 
        jsr sgx_graphics_DrawSurface_setFillTexture; 
        ld.w r2, #INT_RAM_START + 48; 
        jsr sgx_graphics_DrawSurface_fillPoint; 
        jsr     transition1;

        ld.w r3, #IMG_C64; 
        jsr sgx_graphics_DrawSurface_setFillTexture; 
        ld.w r2, #INT_RAM_START + 68; 
        jsr sgx_graphics_DrawSurface_fillPoint; 
        jsr     transition2;



        ld.b    r0, #8;
        st.b    (jsw_anim_count), r0;


        ld.w    r3, #SPECTRUM_FONT_STANDARD;
        jsr     sgx_graphics_DrawSurface_setCurrentFont;
        jsr     textSpectrum35;



jsw_anim_loop:

        // Draw the image
        ld.w    r3, #IMG_S35_G1;
        jsr     sgx_graphics_DrawSurface_setFillTexture;
        ld.w    r2, #INT_RAM_START + 32;
        jsr     sgx_graphics_DrawSurface_fillPoint;
        jsr     delay_anim;

        ld.w    r3, #IMG_S35_G2;
        jsr     sgx_graphics_DrawSurface_setFillTexture;
        ld.w    r2, #INT_RAM_START + 32;
        jsr     sgx_graphics_DrawSurface_fillPoint;
        jsr     delay_anim;

        ld.w    r3, #IMG_S35_G1;
        jsr     sgx_graphics_DrawSurface_setFillTexture;
        ld.w    r2, #INT_RAM_START + 32;
        jsr     sgx_graphics_DrawSurface_fillPoint;
        jsr     delay_anim;

        ld.w    r3, #IMG_S35_G3;
        jsr     sgx_graphics_DrawSurface_setFillTexture;
        ld.w    r2, #INT_RAM_START + 32;
        jsr     sgx_graphics_DrawSurface_fillPoint;
        jsr     delay_anim;

        ld.b    r0,(jsw_anim_count);
        addq    r0, #-1;
        st.b    (jsw_anim_count), r0;
        bne     jsw_anim_loop;
       



        jsr     sgx_graphics_DrawSurface_clearScreen;
        jsr     textSpectrum35;
        // Prepare the image
        ld.w    r3, #IMG_MONA_LISA;
        jsr     sgx_graphics_DrawSurface_setFillTexture;

        // Draw the image
        ld.w    r2, #INT_RAM_START + 48;
        jsr     sgx_graphics_DrawSurface_fillPoint;

        jsr     sgx_fx_scroll_up_2;



pic2:
        // Prepare the image
        ld.w    r3, #IMG_DIZZY;
        jsr     sgx_graphics_DrawSurface_setFillTexture;

        // Draw the image
        ld.w    r2, #INT_RAM_START + 48;
        jsr     sgx_graphics_DrawSurface_fillPoint;

        jsr     textSpectrum35;
        jsr     delay10;


pic3:
        // Prepare the image
        ld.w    r3, #IMG_CHUCKIE;
        jsr     sgx_graphics_DrawSurface_setFillTexture;

        // Draw the image
        ld.w    r2, #INT_RAM_START + 48;
        jsr     sgx_graphics_DrawSurface_fillPoint;

        jsr     delay10;


pic4:
        // Prepare the IMG_YEARR
        ld.w    r3, #IMG_YEARR;
        jsr     sgx_graphics_DrawSurface_setFillTexture;

        // Draw the image
        ld.w    r2, #INT_RAM_START + 8;
        jsr     sgx_graphics_DrawSurface_fillPoint;

        jsr     delay10;
        jsr     sgx_fx_scroll_up_1;


pic5: // sinclair
        ld.w    r3, #IMG_SINCLAIR;
        jsr     sgx_graphics_DrawSurface_setFillTexture;

        // Draw the image
        ld.w    r2, #INT_RAM_START + 0;
        jsr     sgx_graphics_DrawSurface_fillPoint;
        ld.w    r2, #INT_RAM_START + 96;
        jsr     sgx_graphics_DrawSurface_fillPoint;
        ld.w    r2, #INT_RAM_START + 192;
        jsr     sgx_graphics_DrawSurface_fillPoint;

        jsr     delay10;
        jsr     sgx_fx_scroll_down_2;



pic6:
        ld.w    r3, #IMG_WILLY;
        jsr     sgx_graphics_DrawSurface_setFillTexture;

        // Draw the image
        ld.w    r2, #INT_RAM_START + 16;
        jsr     sgx_graphics_DrawSurface_fillPoint;

       jsr     delay10;



        jmp pic1;


delay_anim:
        ld.w    r1, #200;
        jmp     sgx_sleep;

delay10:
        ld.w    r1, #2000;
        jmp     sgx_sleep;



// k,l,m,n,o are broken
// 107 ascii
TXT_MONA equ $;
    db 4;
    db FONT_UC_J, FONT_LC_K, FONT_LC_L, FONT_LC_N;

TXT_LISA equ $;
    db 4;
    db FONT_UC_T, FONT_LC_O, FONT_LC_P, FONT_LC_Q;

IMG_MONA_LISA        equ     $;
    db 4, 160;  // width of image (in bytes), height of image (in rows)
    db 0,0,0,0,0,0,0,0,0,0,0,0,0,30,0,0,0,255,1,0,128,255,31,0,128,255,255,0,192,253,255,15,224,223,255,127,224,125,255,63,240,247,247,63,240,127,255,61,248,239,247,63,252,252,94,31,252,239,255,13,240,127,223,7,128,255,253,1;
    db 0,252,223,9,0,224,127,0,0,0,127,7,0,0,120,7,0,0,224,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,227,15,0,16,36,0,0,0,227,7,0,0,0,0,0,0,4,8,0,16,36,8,0,224,195,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0;

IMG_DIZZY   equ $;
    db 4, 160;
    db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,15,0,0,240,31,0,0,248,63,0,0,248,63,0,0,24,49,0,0,12,97,0,0,108,109,0,56,12,97,56,124,142,227,124,120,255,255,61,112,255,255,29,0,239,239,1,0,31,240,1,0,62,248,0,0,252;
    db 126,0,1,252,127,64,129,240,159,32,129,0,128,1,133,0,128,9,196,56,56,72,190,8,32,68,160,96,96,70,193,244,114,66,195,1,0,216,38,1,128,156,0,0,8,32,0,0,16,16,72,128,195,8,0,0,0,132,0,0,0,0,32,65,0,16,64,0,0,4,2,0,1,0,18,0,2,128,0,0,0,0;

IMG_CHUCKIE   equ $;
    db 4, 160;
    db 0,0,0,0,0,0,0,0,0,0,0,0,0,0,120,0,0,0,124,0,0,0,124,0,0,0,124,0,0,240,255,15,0,0,116,0,0,0,100,0,0,0,124,0,0,0,56,0,0,0,56,0,0,0,127,0,0,128,207,0,0,128,191,0,0,0,191,0,0,0,190,0,0,0,124,0,224,128,132,0,240,0,0,0;
    db 248,7,67,0,252,15,0,0,252,15,0,0,252,15,0,0,252,15,0,0,248,7,0,0,240,0,0,0,224,0,0,0,0,0,0,0,0,0,0,0,248,249,207,63,0,0,0,0,228,63,255,249,0,0,0,0,0,0,0,0,60,255,249,207,0,0,0,0,0,0,0,0,0,0,0,0;


IMG_YEARR   equ $;
    db 4, 240;
    db 255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,254,0,0,32,255,3,0,192,195,2,0,0,225,3,0,0,27,2,0,0,197,3,0,248,102,1,0;
    db 254,0,1,0,255,128,1,128,255,128,0,128,255,113,0,192,255,243,0,192,247,255,1,192,247,255,1,192,251,216,3,192,59,208,3,192,31,208,3,192,7,239,3,192,135,31,3,192,195,7,2,192,227,129,3,192,31,96,0,192,27,56,0,0,29,254;
    db 0,0,63,255,3,0,255,251,7,0,255,247,7,0,254,239,31,0,248,223,31,0,224,255,31,0,224,223,31,0,248,223,15,0,254,199,15,0,255,99,15,192,255,96,15,192,126,224,15,64,61,192,7,64,204,254,7,64,88,59,14,64,176,45,24,128,224;
    db 54,32,0,31,192,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255;




IMG_SINCLAIR   equ $;
    db 4, 40;
  db 0, 0, 0, 0, 128, 0, 8, 4, 0, 0, 8, 0, 184, 220, 233, 116, 140, 222, 136, 53, 140, 82, 136, 21, 188, 82, 232, 20, 160, 82, 40, 21; 
db 188, 210, 233, 21, 0, 0, 0, 0;  

    db 255,255,255,255,127,255,247,251,255,255,247,255,71,35,22,139,115,33,119,202,115,173,119,234,67,173,23,235,95,173,215,234,67,45,22,234,255,255,255,255;


IMG_WILLY       equ $;
    db 4, 240;

db 0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 0, 0, 0, 240, 31, 0, 0, 240, 31, 0, 0, 240, 31, 0, 0, 248, 31, 0, 0, 254, 127, 0; 
db 0, 254, 127, 0, 0, 48, 31, 0, 0, 48, 31, 0, 0, 48, 31, 0, 0, 254, 31, 0, 0, 254, 31, 0, 0, 240, 31, 0, 0, 240, 31, 0; 
db 0, 240, 31, 0, 0, 192, 3, 0, 0, 192, 7, 0, 0, 240, 31, 0, 0, 240, 31, 0, 0, 240, 31, 0, 0, 254, 127, 0, 0, 254, 127, 0; 
db 0, 254, 127, 0, 0, 254, 127, 0, 0, 62, 255, 0, 128, 63, 255, 3, 128, 63, 255, 3, 128, 199, 255, 3, 128, 199, 255, 3, 0, 240, 31, 0; 
db 0, 240, 31, 0, 0, 56, 31, 0, 0, 62, 127, 0, 0, 62, 127, 0, 0, 254, 120, 0, 0, 254, 120, 0, 0, 62, 120, 0, 128, 63, 127, 0; 
db 128, 63, 127, 0, 0, 0, 0, 0, 255, 255, 255, 255, 255, 255, 255, 255, 140, 49, 99, 140, 140, 49, 103, 140, 0, 0, 0, 0, 115, 198, 24, 115; 
db 115, 198, 24, 115, 255, 255, 255, 255, 255, 255, 255, 255, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0;


// 48 height = 4*48 bytes = 192
// JSW - animation
// ld.w r2, #INT_RAM_START + 64; 
IMG_S35_G1 equ $; 
db 4, 192; 
db 0, 252, 63, 0, 0, 252, 63, 0, 0, 252, 63, 0, 0, 252, 63, 0, 0, 252, 63, 0, 0, 252, 63, 0, 128, 255, 255, 1, 128, 255, 255, 1; 
db 128, 255, 255, 1, 0, 252, 56, 0, 0, 252, 56, 0, 0, 252, 56, 0, 0, 252, 255, 1, 0, 252, 255, 1, 0, 252, 255, 1, 0, 252, 63, 0; 
db 0, 252, 63, 0, 0, 252, 63, 0, 0, 224, 7, 0, 0, 224, 7, 0, 0, 224, 7, 0, 0, 252, 63, 0, 0, 252, 63, 0, 0, 252, 63, 0; 
db 128, 255, 255, 1, 128, 255, 255, 1, 128, 255, 255, 1, 128, 255, 255, 1, 128, 255, 255, 1, 128, 255, 255, 1, 240, 255, 248, 15, 240, 255, 248, 15; 
db 240, 255, 248, 15, 240, 255, 199, 15, 240, 255, 199, 15, 240, 255, 199, 15, 0, 252, 63, 0, 0, 252, 63, 0, 0, 252, 63, 0, 128, 255, 248, 1; 
db 128, 255, 248, 1, 128, 255, 248, 1, 128, 31, 255, 1, 128, 31, 255, 1, 128, 31, 255, 1, 128, 255, 248, 15, 128, 255, 248, 15, 128, 255, 248, 15;



IMG_S35_G2 equ $; 
db 4, 192; 
db 0, 252, 63, 0, 0, 252, 63, 0, 0, 252, 63, 0, 0, 252, 63, 0, 0, 252, 63, 0, 0, 252, 63, 0, 128, 255, 255, 1, 128, 255, 255, 1; 
db 128, 255, 255, 1, 0, 252, 56, 0, 0, 252, 56, 0, 0, 252, 56, 0, 0, 252, 255, 1, 0, 252, 255, 1, 0, 252, 255, 1, 0, 252, 63, 0; 
db 0, 252, 63, 0, 0, 252, 63, 0, 0, 224, 7, 0, 0, 224, 7, 0, 0, 224, 7, 0, 0, 252, 63, 0, 0, 252, 63, 0, 0, 252, 63, 0; 
db 128, 31, 255, 1, 128, 31, 255, 1, 128, 31, 255, 1, 128, 31, 255, 1, 128, 31, 255, 1, 128, 31, 255, 1, 128, 31, 255, 1, 128, 31, 255, 1; 
db 128, 31, 255, 1, 128, 255, 248, 1, 128, 255, 248, 1, 128, 255, 248, 1, 0, 252, 63, 0, 0, 252, 63, 0, 0, 252, 63, 0, 0, 224, 7, 0; 
db 0, 224, 7, 0, 0, 224, 7, 0, 0, 224, 7, 0, 0, 224, 7, 0, 0, 224, 7, 0, 0, 224, 63, 0, 0, 224, 63, 0, 0, 224, 63, 0; 

IMG_S35_G3 equ $; 
db 4, 192; 
db 0, 252, 63, 0, 0, 252, 63, 0, 0, 252, 63, 0, 0, 252, 63, 0, 0, 252, 63, 0, 0, 252, 63, 0, 128, 255, 255, 1, 128, 255, 255, 1; 
db 128, 255, 255, 1, 0, 252, 56, 0, 0, 252, 56, 0, 0, 252, 56, 0, 0, 252, 255, 1, 0, 252, 255, 1, 0, 252, 255, 1, 0, 252, 63, 0; 
db 0, 252, 63, 0, 0, 252, 63, 0, 0, 224, 7, 0, 0, 224, 7, 0, 0, 224, 7, 0, 0, 252, 63, 0, 0, 252, 63, 0, 0, 252, 63, 0; 
db 128, 255, 255, 1, 128, 255, 255, 1, 128, 255, 255, 1, 240, 255, 255, 15, 240, 255, 255, 15, 240, 255, 255, 15, 254, 255, 255, 127, 254, 255, 255, 127; 
db 254, 255, 255, 127, 126, 252, 63, 126, 126, 252, 63, 126, 126, 252, 63, 126, 0, 252, 255, 1, 0, 252, 255, 1, 0, 252, 255, 1, 128, 255, 248, 113; 
db 128, 255, 248, 113, 128, 255, 248, 113, 240, 3, 192, 127, 240, 3, 192, 127, 240, 3, 192, 127, 240, 31, 192, 15, 240, 31, 192, 15, 240, 31, 192, 15;


IMG_3DMONSTER equ $; 
db 4, 208; 
db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 63, 0, 0, 248, 255, 1, 0, 252, 255, 1, 0, 252, 255, 1; 
db 0, 254, 255, 3, 0, 254, 255, 3, 0, 198, 31, 3, 0, 198, 31, 3, 0, 222, 63, 1, 128, 255, 255, 3, 128, 253, 255, 7, 192, 253, 255, 15; 
db 224, 123, 242, 15, 224, 227, 63, 31, 240, 227, 63, 31, 248, 195, 31, 63, 248, 7, 128, 63, 248, 31, 192, 63, 248, 31, 192, 63, 252, 31, 224, 63; 
db 188, 63, 240, 31, 191, 255, 255, 15, 191, 255, 255, 15, 207, 255, 255, 15, 199, 255, 255, 3, 199, 255, 255, 15, 199, 255, 255, 15, 227, 255, 255, 15; 
db 224, 255, 255, 31, 224, 255, 255, 127, 224, 255, 255, 127, 224, 255, 255, 255, 248, 255, 255, 255, 248, 255, 239, 255, 248, 255, 231, 255, 248, 255, 199, 63; 
db 224, 255, 255, 127, 224, 255, 255, 63, 224, 255, 255, 63, 192, 223, 63, 31, 192, 199, 207, 127, 192, 199, 199, 127, 224, 7, 195, 255, 255, 7, 0, 0; 
db 255, 3, 0, 0, 255, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 

IMG_ACORN equ $; 
db 4, 184; 
db 0, 0, 0, 0, 0, 224, 15, 0, 0, 248, 63, 0, 0, 252, 127, 0, 0, 254, 127, 0, 0, 255, 255, 0, 128, 255, 255, 1, 128, 255, 255, 1; 
db 192, 255, 255, 3, 192, 255, 255, 3, 224, 255, 255, 7, 224, 255, 255, 7, 224, 255, 255, 7, 240, 255, 255, 15, 240, 255, 255, 15, 240, 255, 255, 15; 
db 240, 255, 255, 15, 248, 255, 255, 31, 248, 255, 255, 31, 248, 255, 255, 31, 252, 255, 255, 63, 252, 255, 255, 63, 252, 255, 255, 63, 252, 255, 255, 63; 
db 0, 0, 0, 0, 0, 0, 0, 0, 254, 255, 255, 127, 254, 255, 255, 127, 254, 255, 255, 63, 252, 255, 255, 31, 252, 255, 255, 31, 248, 255, 255, 31; 
db 248, 255, 255, 15, 240, 255, 255, 7, 224, 255, 255, 7, 192, 255, 255, 3, 128, 255, 255, 1, 0, 255, 127, 0, 0, 252, 63, 0, 56, 224, 3, 0; 
db 192, 195, 0, 0, 0, 252, 0, 0, 0, 240, 1, 0, 0, 0, 7, 0, 0, 0, 24, 0, 0, 0, 0, 0; 

IMG_APPLE equ $; 
db 4, 144; 
db 0, 0, 0, 0, 0, 0, 112, 0, 0, 0, 120, 0, 0, 0, 124, 0, 0, 0, 62, 0, 0, 0, 62, 0, 0, 0, 31, 0, 0, 0, 15, 0; 
db 0, 6, 227, 1, 192, 127, 252, 15, 224, 255, 255, 31, 240, 255, 255, 63, 248, 255, 255, 31, 248, 255, 255, 15, 252, 255, 255, 15, 252, 255, 255, 7; 
db 252, 255, 255, 7, 254, 255, 255, 3, 254, 255, 255, 3, 254, 255, 255, 3, 254, 255, 255, 3, 254, 255, 255, 7, 252, 255, 255, 7, 252, 255, 255, 15; 
db 252, 255, 255, 31, 252, 255, 255, 63, 248, 255, 255, 127, 248, 255, 255, 127, 240, 255, 255, 63, 240, 255, 255, 63, 224, 255, 255, 31, 224, 255, 255, 15; 
db 192, 255, 255, 15, 128, 255, 255, 7, 0, 63, 248, 3, 0, 0, 0, 0; 


IMG_ATARI equ $; 
db 4, 136; 
db 0, 0, 0, 0, 0, 0, 0, 0, 0, 208, 11, 0, 0, 208, 11, 0, 0, 208, 11, 0, 0, 208, 11, 0, 0, 208, 11, 0, 0, 208, 11, 0; 
db 0, 216, 27, 0, 0, 216, 27, 0, 0, 216, 27, 0, 0, 216, 27, 0, 0, 220, 59, 0, 0, 220, 59, 0, 0, 222, 123, 0, 0, 222, 123, 0; 
db 0, 207, 243, 0, 128, 207, 243, 1, 224, 199, 227, 7, 248, 195, 195, 31, 252, 193, 131, 63, 252, 192, 3, 63, 60, 192, 3, 60, 0, 0, 0, 0; 
db 184, 159, 195, 99, 184, 159, 195, 103, 56, 142, 227, 110, 124, 206, 231, 110, 124, 206, 231, 102, 108, 206, 230, 103, 254, 238, 239, 103, 254, 238, 111, 103; 
db 198, 110, 108, 110, 198, 110, 108, 108; 


IMG_C64 equ $; 
db 4, 120; 
db 0, 248, 3, 0, 0, 252, 7, 0, 0, 255, 7, 0, 192, 255, 7, 0, 224, 255, 7, 0, 240, 255, 7, 0, 240, 255, 7, 0, 248, 255, 7, 0; 
db 252, 15, 0, 0, 252, 7, 248, 63, 252, 3, 248, 31, 254, 1, 248, 15, 254, 1, 248, 7, 254, 0, 248, 3, 254, 0, 0, 0, 254, 0, 248, 1; 
db 254, 0, 248, 3, 254, 1, 248, 7, 254, 1, 248, 15, 252, 3, 248, 31, 252, 7, 248, 63, 248, 31, 4, 0, 248, 255, 7, 0, 240, 255, 7, 0; 
db 224, 255, 7, 0, 192, 255, 7, 0, 128, 255, 7, 0, 0, 254, 7, 0, 0, 248, 7, 0, 0, 240, 3, 0; 


IMG_HORACE equ $; 
db 4, 160; 
db 0, 254, 127, 0, 128, 255, 255, 3, 192, 255, 255, 15, 224, 255, 255, 15, 240, 255, 255, 31, 248, 255, 255, 31, 248, 255, 251, 31, 248, 127, 240, 49; 
db 252, 63, 240, 49, 252, 31, 240, 48, 252, 31, 240, 48, 252, 15, 112, 48, 204, 31, 112, 48, 206, 31, 56, 56, 206, 31, 60, 56, 206, 31, 60, 28; 
db 198, 191, 63, 30, 134, 255, 255, 31, 132, 255, 255, 15, 132, 255, 255, 15, 128, 255, 255, 15, 0, 254, 255, 7, 0, 252, 249, 7, 0, 248, 240, 15; 
db 0, 248, 240, 15, 0, 248, 224, 15, 0, 126, 224, 15, 192, 127, 192, 15, 224, 31, 192, 15, 224, 3, 192, 15, 224, 3, 192, 15, 0, 3, 224, 7; 
db 0, 0, 224, 7, 0, 0, 224, 3, 0, 0, 248, 7, 0, 0, 240, 15, 0, 0, 192, 31, 0, 0, 0, 56, 0, 0, 0, 0, 0, 0, 0, 0; 

IMG_MARIO equ $; 
db 4, 192; 
db 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 192, 63, 0, 0, 240, 255, 1, 0, 240, 255, 0, 0, 240, 28, 0; 
db 0, 248, 1, 0, 0, 220, 1, 0, 0, 30, 48, 0, 0, 30, 252, 1, 0, 30, 252, 1, 0, 48, 0, 0, 0, 240, 31, 0, 0, 240, 63, 0; 
db 0, 248, 127, 0, 0, 252, 255, 0, 0, 254, 255, 1, 0, 62, 207, 3, 0, 62, 207, 3, 0, 192, 63, 0, 0, 192, 63, 0, 0, 224, 61, 0; 
db 0, 248, 248, 1, 0, 120, 240, 1, 0, 124, 240, 1, 0, 126, 240, 3, 224, 255, 255, 255, 240, 255, 255, 255, 248, 255, 255, 255, 252, 255, 255, 255; 
db 254, 255, 255, 255, 254, 255, 255, 255, 254, 255, 255, 255, 126, 190, 207, 247, 110, 182, 205, 182, 78, 182, 73, 182, 72, 178, 73, 182, 72, 48, 8, 134; 
db 72, 0, 8, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0; 

IMG_OWL equ $; 
db 4, 160; 
db 0, 0, 0, 0, 34, 19, 153, 72, 34, 19, 153, 72, 8, 64, 6, 48, 8, 64, 4, 48, 6, 131, 129, 192, 0, 0, 129, 0, 192, 12, 96, 3; 
db 2, 0, 128, 64, 6, 3, 128, 192, 8, 64, 4, 48, 8, 64, 6, 48, 34, 128, 1, 76, 34, 0, 1, 72, 216, 0, 0, 3, 8, 0, 0, 2; 
db 38, 179, 153, 192, 136, 68, 0, 0, 200, 76, 0, 0, 34, 19, 1, 64, 34, 19, 1, 64, 200, 76, 0, 0, 136, 68, 0, 0, 32, 179, 1, 192; 
db 0, 16, 1, 0, 192, 76, 6, 0, 0, 18, 9, 64, 0, 179, 25, 192, 0, 68, 36, 0, 0, 68, 38, 0, 0, 176, 153, 192, 0, 16, 153, 64; 
db 0, 64, 96, 3, 0, 16, 0, 0, 0, 48, 24, 204, 136, 68, 36, 48, 200, 76, 102, 48, 0, 0, 0, 64, 0, 0, 0, 64, 0, 0, 0, 0; 



/*

C:\Users\steev\Documents\clients\self\code\assembly\MegaProcessor\src>C:\Users\s
teev\Downloads\Megaprocessor_sw\MPasm.exe s35
Pass #0...
Pass #1...
Pass #2...
Pass #3 [LAST]...
Assembler finished without error

C:\Users\steev\Documents\clients\self\code\assembly\MegaProcessor\src
*/